<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hejun.demo.service.inter.dao.generation.ArticleMapper" >
  <resultMap id="BaseResultMap" type="com.hejun.demo.service.inter.domain.generation.Article" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="gmt_created" property="gmtCreated" jdbcType="TIMESTAMP" />
    <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
    <result column="created_by" property="createdBy" jdbcType="VARCHAR" />
    <result column="modified_by" property="modifiedBy" jdbcType="VARCHAR" />
    <result column="is_del" property="isDel" jdbcType="BIT" />
    <result column="article_type" property="articleType" jdbcType="TINYINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="vice_title" property="viceTitle" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="original_site_code" property="originalSiteCode" jdbcType="TINYINT" />
    <result column="original_site_name" property="originalSiteName" jdbcType="VARCHAR" />
    <result column="original_url" property="originalUrl" jdbcType="VARCHAR" />
    <result column="pic_url" property="picUrl" jdbcType="VARCHAR" />
    <result column="keywords" property="keywords" jdbcType="VARCHAR" />
    <result column="pub_time" property="pubTime" jdbcType="TIMESTAMP" />
    <result column="read_count" property="readCount" jdbcType="INTEGER" />
    <result column="like_count" property="likeCount" jdbcType="INTEGER" />
    <result column="comment_count" property="commentCount" jdbcType="INTEGER" />
    <result column="version" property="version" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <trim prefix="(" suffix=")" prefixOverrides="and" >
        
        <foreach collection="oredCriteria" item="criteria" separator="or" >
          <if test="criteria.valid" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </if>
        </foreach>
      </trim>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <trim prefix="(" suffix=")" prefixOverrides="and" >
        
        <foreach collection="example.oredCriteria" item="criteria" separator="or" >
          <if test="criteria.valid" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </if>
        </foreach>
      </trim>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, gmt_created, gmt_modified, created_by, modified_by, is_del, article_type, title, 
    vice_title, author, original_site_code, original_site_name, original_url, pic_url, 
    keywords, pub_time, read_count, like_count, comment_count, version
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hejun.demo.service.inter.domain.generation.ArticleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <if test="!definedQueryColumns" >
      <include refid="Base_Column_List" />
    </if>
    <if test="definedQueryColumns" >
      <foreach collection="queryColumns" item="queryColumn" separator="," >
        ${queryColumn}
      </foreach>
    </if>
    from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="forUpdate" >
      for update
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from article
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from article
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hejun.demo.service.inter.domain.generation.ArticleExample" >
    delete from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hejun.demo.service.inter.domain.generation.Article" useGeneratedKeys="true" keyProperty="id" >
    insert into article (id, gmt_created, gmt_modified, 
      created_by, modified_by, is_del, 
      article_type, title, vice_title, 
      author, original_site_code, original_site_name, 
      original_url, pic_url, keywords, 
      pub_time, read_count, like_count, 
      comment_count, version)
    values (#{id,jdbcType=VARCHAR}, #{gmtCreated,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, 
      #{createdBy,jdbcType=VARCHAR}, #{modifiedBy,jdbcType=VARCHAR}, #{isDel,jdbcType=BIT}, 
      #{articleType,jdbcType=TINYINT}, #{title,jdbcType=VARCHAR}, #{viceTitle,jdbcType=VARCHAR}, 
      #{author,jdbcType=VARCHAR}, #{originalSiteCode,jdbcType=TINYINT}, #{originalSiteName,jdbcType=VARCHAR}, 
      #{originalUrl,jdbcType=VARCHAR}, #{picUrl,jdbcType=VARCHAR}, #{keywords,jdbcType=VARCHAR}, 
      #{pubTime,jdbcType=TIMESTAMP}, #{readCount,jdbcType=INTEGER}, #{likeCount,jdbcType=INTEGER}, 
      #{commentCount,jdbcType=INTEGER}, #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hejun.demo.service.inter.domain.generation.Article" useGeneratedKeys="true" keyProperty="id" >
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="gmtCreated != null" >
        gmt_created,
      </if>
      <if test="gmtModified != null" >
        gmt_modified,
      </if>
      <if test="createdBy != null" >
        created_by,
      </if>
      <if test="modifiedBy != null" >
        modified_by,
      </if>
      <if test="isDel != null" >
        is_del,
      </if>
      <if test="articleType != null" >
        article_type,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="viceTitle != null" >
        vice_title,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="originalSiteCode != null" >
        original_site_code,
      </if>
      <if test="originalSiteName != null" >
        original_site_name,
      </if>
      <if test="originalUrl != null" >
        original_url,
      </if>
      <if test="picUrl != null" >
        pic_url,
      </if>
      <if test="keywords != null" >
        keywords,
      </if>
      <if test="pubTime != null" >
        pub_time,
      </if>
      <if test="readCount != null" >
        read_count,
      </if>
      <if test="likeCount != null" >
        like_count,
      </if>
      <if test="commentCount != null" >
        comment_count,
      </if>
      <if test="version != null" >
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreated != null" >
        #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null" >
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="modifiedBy != null" >
        #{modifiedBy,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=BIT},
      </if>
      <if test="articleType != null" >
        #{articleType,jdbcType=TINYINT},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="viceTitle != null" >
        #{viceTitle,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="originalSiteCode != null" >
        #{originalSiteCode,jdbcType=TINYINT},
      </if>
      <if test="originalSiteName != null" >
        #{originalSiteName,jdbcType=VARCHAR},
      </if>
      <if test="originalUrl != null" >
        #{originalUrl,jdbcType=VARCHAR},
      </if>
      <if test="picUrl != null" >
        #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="keywords != null" >
        #{keywords,jdbcType=VARCHAR},
      </if>
      <if test="pubTime != null" >
        #{pubTime,jdbcType=TIMESTAMP},
      </if>
      <if test="readCount != null" >
        #{readCount,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null" >
        #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null" >
        #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hejun.demo.service.inter.domain.generation.ArticleExample" resultType="java.lang.Integer" >
    select count(*) from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update article
    <set >
      <trim suffixOverrides="," >
        <if test="record.gmtCreated!=null and record.gmtCreatedExpression==null" >
          gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
        </if>
        <if test="record.gmtCreatedExpression!=null" >
          gmt_created = ${record.gmtCreatedExpression},
        </if>
        <if test="record.gmtModified!=null and record.gmtModifiedExpression==null" >
          gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
        </if>
        <if test="record.gmtModifiedExpression!=null" >
          gmt_modified = ${record.gmtModifiedExpression},
        </if>
        <if test="record.createdBy!=null and record.createdByExpression==null" >
          created_by = #{record.createdBy,jdbcType=VARCHAR},
        </if>
        <if test="record.createdByExpression!=null" >
          created_by = ${record.createdByExpression},
        </if>
        <if test="record.modifiedBy!=null and record.modifiedByExpression==null" >
          modified_by = #{record.modifiedBy,jdbcType=VARCHAR},
        </if>
        <if test="record.modifiedByExpression!=null" >
          modified_by = ${record.modifiedByExpression},
        </if>
        <if test="record.isDel!=null and record.isDelExpression==null" >
          is_del = #{record.isDel,jdbcType=BIT},
        </if>
        <if test="record.isDelExpression!=null" >
          is_del = ${record.isDelExpression},
        </if>
        <if test="record.articleType!=null and record.articleTypeExpression==null" >
          article_type = #{record.articleType,jdbcType=TINYINT},
        </if>
        <if test="record.articleTypeExpression!=null" >
          article_type = ${record.articleTypeExpression},
        </if>
        <if test="record.title!=null and record.titleExpression==null" >
          title = #{record.title,jdbcType=VARCHAR},
        </if>
        <if test="record.titleExpression!=null" >
          title = ${record.titleExpression},
        </if>
        <if test="record.viceTitle!=null and record.viceTitleExpression==null" >
          vice_title = #{record.viceTitle,jdbcType=VARCHAR},
        </if>
        <if test="record.viceTitleExpression!=null" >
          vice_title = ${record.viceTitleExpression},
        </if>
        <if test="record.author!=null and record.authorExpression==null" >
          author = #{record.author,jdbcType=VARCHAR},
        </if>
        <if test="record.authorExpression!=null" >
          author = ${record.authorExpression},
        </if>
        <if test="record.originalSiteCode!=null and record.originalSiteCodeExpression==null" >
          original_site_code = #{record.originalSiteCode,jdbcType=TINYINT},
        </if>
        <if test="record.originalSiteCodeExpression!=null" >
          original_site_code = ${record.originalSiteCodeExpression},
        </if>
        <if test="record.originalSiteName!=null and record.originalSiteNameExpression==null" >
          original_site_name = #{record.originalSiteName,jdbcType=VARCHAR},
        </if>
        <if test="record.originalSiteNameExpression!=null" >
          original_site_name = ${record.originalSiteNameExpression},
        </if>
        <if test="record.originalUrl!=null and record.originalUrlExpression==null" >
          original_url = #{record.originalUrl,jdbcType=VARCHAR},
        </if>
        <if test="record.originalUrlExpression!=null" >
          original_url = ${record.originalUrlExpression},
        </if>
        <if test="record.picUrl!=null and record.picUrlExpression==null" >
          pic_url = #{record.picUrl,jdbcType=VARCHAR},
        </if>
        <if test="record.picUrlExpression!=null" >
          pic_url = ${record.picUrlExpression},
        </if>
        <if test="record.keywords!=null and record.keywordsExpression==null" >
          keywords = #{record.keywords,jdbcType=VARCHAR},
        </if>
        <if test="record.keywordsExpression!=null" >
          keywords = ${record.keywordsExpression},
        </if>
        <if test="record.pubTime!=null and record.pubTimeExpression==null" >
          pub_time = #{record.pubTime,jdbcType=TIMESTAMP},
        </if>
        <if test="record.pubTimeExpression!=null" >
          pub_time = ${record.pubTimeExpression},
        </if>
        <if test="record.readCount!=null and record.readCountExpression==null" >
          read_count = #{record.readCount,jdbcType=INTEGER},
        </if>
        <if test="record.readCountExpression!=null" >
          read_count = ${record.readCountExpression},
        </if>
        <if test="record.likeCount!=null and record.likeCountExpression==null" >
          like_count = #{record.likeCount,jdbcType=INTEGER},
        </if>
        <if test="record.likeCountExpression!=null" >
          like_count = ${record.likeCountExpression},
        </if>
        <if test="record.commentCount!=null and record.commentCountExpression==null" >
          comment_count = #{record.commentCount,jdbcType=INTEGER},
        </if>
        <if test="record.commentCountExpression!=null" >
          comment_count = ${record.commentCountExpression},
        </if>
        <if test="record.version!=null and record.versionExpression==null" >
          version = #{record.version,jdbcType=INTEGER},
        </if>
        <if test="record.versionExpression!=null" >
          version = ${record.versionExpression},
        </if>
      </trim>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update article
    set id = #{record.id,jdbcType=VARCHAR},
      gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      created_by = #{record.createdBy,jdbcType=VARCHAR},
      modified_by = #{record.modifiedBy,jdbcType=VARCHAR},
      is_del = #{record.isDel,jdbcType=BIT},
      article_type = #{record.articleType,jdbcType=TINYINT},
      title = #{record.title,jdbcType=VARCHAR},
      vice_title = #{record.viceTitle,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      original_site_code = #{record.originalSiteCode,jdbcType=TINYINT},
      original_site_name = #{record.originalSiteName,jdbcType=VARCHAR},
      original_url = #{record.originalUrl,jdbcType=VARCHAR},
      pic_url = #{record.picUrl,jdbcType=VARCHAR},
      keywords = #{record.keywords,jdbcType=VARCHAR},
      pub_time = #{record.pubTime,jdbcType=TIMESTAMP},
      read_count = #{record.readCount,jdbcType=INTEGER},
      like_count = #{record.likeCount,jdbcType=INTEGER},
      comment_count = #{record.commentCount,jdbcType=INTEGER},
      version = #{record.version,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hejun.demo.service.inter.domain.generation.Article" >
    update article
    <set >
      <trim suffixOverrides="," >
        <if test="record.gmtCreated!=null and record.gmtCreatedExpression==null" >
          gmt_created = #{record.gmtCreated,jdbcType=TIMESTAMP},
        </if>
        <if test="record.gmtCreatedExpression!=null" >
          gmt_created = ${record.gmtCreatedExpression},
        </if>
        <if test="record.gmtModified!=null and record.gmtModifiedExpression==null" >
          gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
        </if>
        <if test="record.gmtModifiedExpression!=null" >
          gmt_modified = ${record.gmtModifiedExpression},
        </if>
        <if test="record.createdBy!=null and record.createdByExpression==null" >
          created_by = #{record.createdBy,jdbcType=VARCHAR},
        </if>
        <if test="record.createdByExpression!=null" >
          created_by = ${record.createdByExpression},
        </if>
        <if test="record.modifiedBy!=null and record.modifiedByExpression==null" >
          modified_by = #{record.modifiedBy,jdbcType=VARCHAR},
        </if>
        <if test="record.modifiedByExpression!=null" >
          modified_by = ${record.modifiedByExpression},
        </if>
        <if test="record.isDel!=null and record.isDelExpression==null" >
          is_del = #{record.isDel,jdbcType=BIT},
        </if>
        <if test="record.isDelExpression!=null" >
          is_del = ${record.isDelExpression},
        </if>
        <if test="record.articleType!=null and record.articleTypeExpression==null" >
          article_type = #{record.articleType,jdbcType=TINYINT},
        </if>
        <if test="record.articleTypeExpression!=null" >
          article_type = ${record.articleTypeExpression},
        </if>
        <if test="record.title!=null and record.titleExpression==null" >
          title = #{record.title,jdbcType=VARCHAR},
        </if>
        <if test="record.titleExpression!=null" >
          title = ${record.titleExpression},
        </if>
        <if test="record.viceTitle!=null and record.viceTitleExpression==null" >
          vice_title = #{record.viceTitle,jdbcType=VARCHAR},
        </if>
        <if test="record.viceTitleExpression!=null" >
          vice_title = ${record.viceTitleExpression},
        </if>
        <if test="record.author!=null and record.authorExpression==null" >
          author = #{record.author,jdbcType=VARCHAR},
        </if>
        <if test="record.authorExpression!=null" >
          author = ${record.authorExpression},
        </if>
        <if test="record.originalSiteCode!=null and record.originalSiteCodeExpression==null" >
          original_site_code = #{record.originalSiteCode,jdbcType=TINYINT},
        </if>
        <if test="record.originalSiteCodeExpression!=null" >
          original_site_code = ${record.originalSiteCodeExpression},
        </if>
        <if test="record.originalSiteName!=null and record.originalSiteNameExpression==null" >
          original_site_name = #{record.originalSiteName,jdbcType=VARCHAR},
        </if>
        <if test="record.originalSiteNameExpression!=null" >
          original_site_name = ${record.originalSiteNameExpression},
        </if>
        <if test="record.originalUrl!=null and record.originalUrlExpression==null" >
          original_url = #{record.originalUrl,jdbcType=VARCHAR},
        </if>
        <if test="record.originalUrlExpression!=null" >
          original_url = ${record.originalUrlExpression},
        </if>
        <if test="record.picUrl!=null and record.picUrlExpression==null" >
          pic_url = #{record.picUrl,jdbcType=VARCHAR},
        </if>
        <if test="record.picUrlExpression!=null" >
          pic_url = ${record.picUrlExpression},
        </if>
        <if test="record.keywords!=null and record.keywordsExpression==null" >
          keywords = #{record.keywords,jdbcType=VARCHAR},
        </if>
        <if test="record.keywordsExpression!=null" >
          keywords = ${record.keywordsExpression},
        </if>
        <if test="record.pubTime!=null and record.pubTimeExpression==null" >
          pub_time = #{record.pubTime,jdbcType=TIMESTAMP},
        </if>
        <if test="record.pubTimeExpression!=null" >
          pub_time = ${record.pubTimeExpression},
        </if>
        <if test="record.readCount!=null and record.readCountExpression==null" >
          read_count = #{record.readCount,jdbcType=INTEGER},
        </if>
        <if test="record.readCountExpression!=null" >
          read_count = ${record.readCountExpression},
        </if>
        <if test="record.likeCount!=null and record.likeCountExpression==null" >
          like_count = #{record.likeCount,jdbcType=INTEGER},
        </if>
        <if test="record.likeCountExpression!=null" >
          like_count = ${record.likeCountExpression},
        </if>
        <if test="record.commentCount!=null and record.commentCountExpression==null" >
          comment_count = #{record.commentCount,jdbcType=INTEGER},
        </if>
        <if test="record.commentCountExpression!=null" >
          comment_count = ${record.commentCountExpression},
        </if>
        <if test="record.version!=null and record.versionExpression==null" >
          version = #{record.version,jdbcType=INTEGER},
        </if>
        <if test="record.versionExpression!=null" >
          version = ${record.versionExpression},
        </if>
      </trim>
    </set>
    where id = #{record.id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hejun.demo.service.inter.domain.generation.Article" >
    update article
    set gmt_created = #{gmtCreated,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=VARCHAR},
      modified_by = #{modifiedBy,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=BIT},
      article_type = #{articleType,jdbcType=TINYINT},
      title = #{title,jdbcType=VARCHAR},
      vice_title = #{viceTitle,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      original_site_code = #{originalSiteCode,jdbcType=TINYINT},
      original_site_name = #{originalSiteName,jdbcType=VARCHAR},
      original_url = #{originalUrl,jdbcType=VARCHAR},
      pic_url = #{picUrl,jdbcType=VARCHAR},
      keywords = #{keywords,jdbcType=VARCHAR},
      pub_time = #{pubTime,jdbcType=TIMESTAMP},
      read_count = #{readCount,jdbcType=INTEGER},
      like_count = #{likeCount,jdbcType=INTEGER},
      comment_count = #{commentCount,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>